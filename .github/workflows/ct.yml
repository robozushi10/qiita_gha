---
name: Continuous Integration
on: push
 
jobs:
    gcov:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            id: checkout
            uses: actions/checkout@v2  
          - name: Confirmation
            id: confirmation
            run: |
              set +e
              gcc --version
              which lcov
              which make
              which npm
#         - uses: actions/checkout@v2.0.0
#         - name: Setup tmate session
#           # v3.11
#           uses: mxschmitt/action-tmate@8b4e4ac71822ed7e0ad5fb3d1c33483e9e8fb270
          - name: Setup tools
            id: setup-tools
            run: |
              sudo apt update
              sudo apt install make -y
              sudo apt install lcov -y
              make --version
              lcov --version
              npm init -y
              npm install @actions/core
              npm install @actions/github
          - name: Compile and Link
            id: compile-and-link
            run: |
              #! Makefile が配置されているディレクトリに移動する
              cd mini-expect
              pwd
              make clean
              make COV=gcov
              ls -ltrA
          - name: Execute GcovProgram
            id: execute-gcovprogram
            run: |
              #! Makefile が配置されているディレクトリに移動する (step を跨ぐとカレントディレクトリが元にもどる)
              cd mini-expect
              #! プログラムを実行する
              ./mini_expect ls -1
              #! カバレッジ率を算出する (*.gcda)
              find . -type f -name "*.gcda" | xargs -I@ gcov -b @ | tee -a gcov.log
#         #! 直前の gcov -b のログを upload する
#         - name: upload artifact-log
#           uses: actions/upload-artifact@v3
#           id: actions-upload-artifact-log
#           #! gcov -b に成功していれば
#           if: steps.execute-gcovprogram.outcome == 'success'
#           with:
#             name: my-artifact-log
#             path: mini-expect/gcov.log
          #! gcov -b の値が合格値に達しているか？
          - name: Has the value of gcov -b reached the pass value?
            uses: robozushi10/ghaa@master
            id: gcov_result
            with:
              log: mini-expect/gcov.log
          - name: Execute LcovProgram
            id: execute-lcovprogram
            run: |
              #! Makefile が配置されているディレクトリに移動する (step を跨ぐとカレントディレクトリが元にもどる)
              cd mini-expect
              #! lcov を使って *.info を生成する
              lcov --rc lcov_branch_coverage=1 -c -d . -o tmp.info
              #! /usr/include/ を計測対象外にする (tmp.info から output.info を作る)
              lcov --rc lcov_branch_coverage=1 -b -c -d . -r tmp.info  '/usr/include/*' -o output.info
              #! genhtml を使って *.info から HTML を生成する
              genhtml --branch-coverage -o OUTPUT -p . -f output.info 
              #! OUTPUT を zip にする
              zip -r -9 OUTPUT.zip OUTPUT
          - name: Output Message
            run: |
              echo "steps.gcov_result.outputs.pass => <${{ steps.gcov_result.outputs.pass }}>"
          - uses: emibcn/badge-action@v1.2.1
            with:
              label: 'Test coverage'
              status: '53.4%'
              color: 'blue,555,daf'
              path: mini-expect/coverage.svg
#             path: '.github/action/coverage.svg'
#             path: '.github/workflows/badge.svg'
#             path: 'actions/workflows/ct.yml/badge.svg'
#         #! https://github.com/marketplace/actions/upload-a-build-artifact
#         - name: upload artifact-html
#           uses: actions/upload-artifact@v3
#           id: actions-upload-artifact
#           #! lcov に成功していれば
#           if: steps.execute-lcovprogram.outcome == 'success'
#           with:
#             name: my-artifact
#             path: mini-expect/OUTPUT.zip
