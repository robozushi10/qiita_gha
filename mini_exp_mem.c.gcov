        -:    0:Source:mini_exp_mem.c
        -:    0:Graph:./mini_exp_mem.gcno
        -:    0:Data:./mini_exp_mem.gcda
        -:    0:Runs:1
        -:    1:#include "mini_exp_std.h"
        -:    2:#include "mini_exp_mem.h"
        -:    3:#include "mini_exp_futex.h"
        -:    4:#include "mini_exp_inst.h"
        -:    5:
        -:    6:void *
function MINI_EXP_get_shm_area called 4 returned 100% blocks executed 100%
        4:    7:MINI_EXP_get_shm_area(char * filename, int require_size)
        -:    8:{
        4:    9:    char          * addr    =   NULL;
        4:   10:    size_t          size    =   0;
        4:   11:    off_t           off     =   0;
        4:   12:    int             fd      =   -1;
        4:   13:    int             wc      =   -1;
        4:   14:    int             ret     =   -1;
        -:   15:    struct  stat    fs;
        4:   16:    char            tmpc    =   '0';
        -:   17:    
        4:   18:    unlink(filename);   /* ignore return value (robozushi10) */
call    0 returned 100%
        -:   19:
        4:   20:    fd  = open(filename, O_RDWR | O_CREAT | O_TRUNC, 0666);
call    0 returned 100%
        -:   21:    ASSERT(fd  != -1);
        -:   22:
        4:   23:    wc  = write(fd, &tmpc, require_size);
call    0 returned 100%
        -:   24:    ASSERT(wc != -1);
        -:   25:
        4:   26:    ret  = fstat(fd, &fs);
call    0 returned 100%
        -:   27:    ASSERT(ret != -1);
        -:   28:
        4:   29:    size = fs.st_size;
        -:   30:
        4:   31:    addr = mmap (NULL, size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, off);
call    0 returned 100%
        4:   32:    ASSERT((int)*addr != -1);
        -:   33:
        4:   34:    ret  = close(fd);
call    0 returned 100%
        -:   35:    ASSERT(ret != -1);
        -:   36:    
        4:   37:    return  addr;
        -:   38:}
        -:   39:
